/* box colors: */
.box-1 {
  background: #9d00ff;
}
.box-2 {
  background: #fa6800;
}
.box-3 {
  background: #f0a30a;
}
.box-4 {
  background: #cc00ff;
}
.box-5 {
  background: #a4c400;
}
.box-6 {
  background: #00ff33;
}
.box-7 {
  background: #00aba9;
}
.box-8 {
  background: #1ba1e2;
}
.box-9 {
  background: #0033ff;
}
/*  */
.box {
  font-size: 50px;
  color: white;
  /* width: 300px;  */
  /* width: 33.333333%; */
  text-align: center;
  padding: 10px;
  box-sizing: border-box;

}
/****************************  container properties**************************** */

/********************************* 
flex-direction - specifies how items are placed in a flex container defining the main axis and direction 
flex-direction :row , flex-direction :row-reverse 
flex-direction :column ,flex-direction :column-reverse  
********************************
*/
/* justify-content */

/* flex-wrap - specifies whether items are forced into a single line or can be wrapped into multiple line
set items at 300px width show items without wrap then put wrap to show how it wraps to next line.
flex-wrap: wrap & flex-wrap: wrap-reverse
*/
/* align-items  */
/* alignt-content */
/****************************  container properties **************************** */

/**************************** flex item props **************************** */
/* order */
/* flex */
/* flex-grow */
/* flex-shrink */
/* align-self */

/**************************** flex item props **************************** */
.container {

  display: flex; /* first thing to get it to register flex */
  border: 8px solid black;
  height: 80vh;
  flex-wrap: wrap;
  /* flex-wrap: wrap-reverse */
  /* flex-direction: row; */
  /* flex-direction: column; */
/* flex-direction: row-reverse; */
 
}

